/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/avatar-waving.glb -t 
*/

import * as THREE from "three"
import React, { useEffect } from "react"
import { useGraph } from "@react-three/fiber"
import { useGLTF, useAnimations } from "@react-three/drei"
import { GLTF, SkeletonUtils } from "three-stdlib"
import { useRef } from "react"
import { Group } from "three"

type ActionName = "Armature|mixamo.com|Layer0"

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Hair: THREE.Mesh
    Ankle: THREE.SkinnedMesh
    Eye_Lash: THREE.SkinnedMesh
    Eyebrow: THREE.SkinnedMesh
    Face: THREE.SkinnedMesh
    Plane001: THREE.SkinnedMesh
    Plane001_1: THREE.SkinnedMesh
    Plane001_2: THREE.SkinnedMesh
    Plane001_3: THREE.SkinnedMesh
    Plane001_4: THREE.SkinnedMesh
    Hand_: THREE.SkinnedMesh
    Hoodie: THREE.SkinnedMesh
    Long_pants: THREE.SkinnedMesh
    Vans: THREE.SkinnedMesh
    Tiny_Eye_1001: THREE.SkinnedMesh
    Tiny_Eye_1001_1: THREE.SkinnedMesh
    Eye_Highlight: THREE.SkinnedMesh
    mixamorigHips: THREE.Bone
  }
  materials: {
    Hair: THREE.MeshStandardMaterial
    Skin: THREE.MeshStandardMaterial
    Basic_Glass: THREE.MeshStandardMaterial
    Screw: THREE.MeshStandardMaterial
    Glasses: THREE.MeshStandardMaterial
    ["Nose pad"]: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
    Hoodie: THREE.MeshStandardMaterial
    Pants: THREE.MeshStandardMaterial
    VansShoeMaterial: THREE.MeshStandardMaterial
    ["Tiny Iris 1.3 (Style Amber)"]: THREE.MeshStandardMaterial
    ["Tiny Sclera 1.3 (Style Amber)"]: THREE.MeshPhysicalMaterial
    ["Eye Highlight"]: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Avatar(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<Group>(null)
  const { scene, animations } = useGLTF("models/avatar-waving.glb")
  animations[0].name = "Waving"
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)
  console.log(actions)
  console.log(animations)

  // useEffect(() => {
  //   actions["Waving"]?.play()
  // })
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <skinnedMesh
            name="Ankle"
            geometry={nodes.Ankle.geometry}
            material={materials.Skin}
            skeleton={nodes.Ankle.skeleton}
          />
          <group name="Brown_Amber_Stylised">
            <skinnedMesh
              name="Tiny_Eye_1001"
              geometry={nodes.Tiny_Eye_1001.geometry}
              material={materials["Tiny Iris 1.3 (Style Amber)"]}
              skeleton={nodes.Tiny_Eye_1001.skeleton}
              morphTargetDictionary={nodes.Tiny_Eye_1001.morphTargetDictionary}
              morphTargetInfluences={nodes.Tiny_Eye_1001.morphTargetInfluences}
            />
            <skinnedMesh
              name="Tiny_Eye_1001_1"
              geometry={nodes.Tiny_Eye_1001_1.geometry}
              material={materials["Tiny Sclera 1.3 (Style Amber)"]}
              skeleton={nodes.Tiny_Eye_1001_1.skeleton}
              morphTargetDictionary={
                nodes.Tiny_Eye_1001_1.morphTargetDictionary
              }
              morphTargetInfluences={
                nodes.Tiny_Eye_1001_1.morphTargetInfluences
              }
            />
          </group>
          <skinnedMesh
            name="Eye_Highlight"
            geometry={nodes.Eye_Highlight.geometry}
            material={materials["Eye Highlight"]}
            skeleton={nodes.Eye_Highlight.skeleton}
            morphTargetDictionary={nodes.Eye_Highlight.morphTargetDictionary}
            morphTargetInfluences={nodes.Eye_Highlight.morphTargetInfluences}
          />
          <skinnedMesh
            name="Eye_Lash"
            geometry={nodes.Eye_Lash.geometry}
            material={materials.Hair}
            skeleton={nodes.Eye_Lash.skeleton}
          />
          <skinnedMesh
            name="Eyebrow"
            geometry={nodes.Eyebrow.geometry}
            material={materials.Hair}
            skeleton={nodes.Eyebrow.skeleton}
          />
          <skinnedMesh
            name="Face"
            geometry={nodes.Face.geometry}
            material={materials.Skin}
            skeleton={nodes.Face.skeleton}
          />
          <group name="Glasses">
            <skinnedMesh
              name="Plane001"
              geometry={nodes.Plane001.geometry}
              material={materials.Basic_Glass}
              skeleton={nodes.Plane001.skeleton}
            />
            <skinnedMesh
              name="Plane001_1"
              geometry={nodes.Plane001_1.geometry}
              material={materials.Screw}
              skeleton={nodes.Plane001_1.skeleton}
            />
            <skinnedMesh
              name="Plane001_2"
              geometry={nodes.Plane001_2.geometry}
              material={materials.Glasses}
              skeleton={nodes.Plane001_2.skeleton}
            />
            <skinnedMesh
              name="Plane001_3"
              geometry={nodes.Plane001_3.geometry}
              material={materials["Nose pad"]}
              skeleton={nodes.Plane001_3.skeleton}
            />
            <skinnedMesh
              name="Plane001_4"
              geometry={nodes.Plane001_4.geometry}
              material={materials.Material}
              skeleton={nodes.Plane001_4.skeleton}
            />
          </group>
          <skinnedMesh
            name="Hand_"
            geometry={nodes.Hand_.geometry}
            material={materials.Skin}
            skeleton={nodes.Hand_.skeleton}
          />
          <skinnedMesh
            name="Hoodie"
            geometry={nodes.Hoodie.geometry}
            material={materials.Hoodie}
            skeleton={nodes.Hoodie.skeleton}
          />
          <skinnedMesh
            name="Long_pants"
            geometry={nodes.Long_pants.geometry}
            material={materials.Pants}
            skeleton={nodes.Long_pants.skeleton}
          />
          <skinnedMesh
            name="Vans"
            geometry={nodes.Vans.geometry}
            material={materials.VansShoeMaterial}
            skeleton={nodes.Vans.skeleton}
          />
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload("models/avatar-waving.glb")
