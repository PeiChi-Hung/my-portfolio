/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/avatar-waving.glb -t 
*/

import { useAnimations, useGLTF } from "@react-three/drei"
import { useGraph } from "@react-three/fiber"
import React, { useEffect, useRef } from "react"
import * as THREE from "three"
import { Group } from "three"
import { GLTF, SkeletonUtils } from "three-stdlib"

type GLTFResult = GLTF & {
  nodes: {
    Hair: THREE.Mesh
    Ankle: THREE.SkinnedMesh
    Eye_Lash: THREE.SkinnedMesh
    Mesh021: THREE.SkinnedMesh
    Mesh021_1: THREE.SkinnedMesh
    Eyebrow: THREE.SkinnedMesh
    Face: THREE.SkinnedMesh
    Plane003: THREE.SkinnedMesh
    Plane003_1: THREE.SkinnedMesh
    Plane003_2: THREE.SkinnedMesh
    Plane003_3: THREE.SkinnedMesh
    Plane003_4: THREE.SkinnedMesh
    Hand: THREE.SkinnedMesh
    Hoodie: THREE.SkinnedMesh
    Long_Pants: THREE.SkinnedMesh
    Vans: THREE.SkinnedMesh
    Eye_Highlight: THREE.SkinnedMesh
    mixamorigHips: THREE.Bone
  }
  materials: {
    Hair: THREE.MeshStandardMaterial
    Skin: THREE.MeshStandardMaterial
    ["Tiny Iris 1.3 (Style Amber)"]: THREE.MeshStandardMaterial
    ["Tiny Sclera 1.3 (Style Amber)"]: THREE.MeshPhysicalMaterial
    Glasses: THREE.MeshPhysicalMaterial
    ["Nose pad"]: THREE.MeshStandardMaterial
    Screw: THREE.MeshStandardMaterial
    Plastic: THREE.MeshPhysicalMaterial
    Material: THREE.MeshStandardMaterial
    Hoodie: THREE.MeshStandardMaterial
    Pants: THREE.MeshStandardMaterial
    VansShoeMaterial: THREE.MeshStandardMaterial
    ["Eye Highlight"]: THREE.MeshStandardMaterial
  }
}

export function Avatar(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<Group>(null)
  const { scene, animations } = useGLTF("models/avatar.glb")
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    actions["Waving"]!.clampWhenFinished = true
    actions["Waving"]!.loop = THREE.LoopOnce
    actions["Waving"]?.play()
  }, [])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Boy" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <skinnedMesh
            name="Ankle"
            geometry={nodes.Ankle.geometry}
            material={materials.Skin}
            skeleton={nodes.Ankle.skeleton}
          />
          <skinnedMesh
            name="Eye_Highlight"
            geometry={nodes.Eye_Highlight.geometry}
            material={materials["Eye Highlight"]}
            skeleton={nodes.Eye_Highlight.skeleton}
            morphTargetDictionary={nodes.Eye_Highlight.morphTargetDictionary}
            morphTargetInfluences={nodes.Eye_Highlight.morphTargetInfluences}
          />
          <skinnedMesh
            name="Eye_Lash"
            geometry={nodes.Eye_Lash.geometry}
            material={materials.Hair}
            skeleton={nodes.Eye_Lash.skeleton}
          />
          <group name="Eyeball">
            <skinnedMesh
              name="Mesh021"
              geometry={nodes.Mesh021.geometry}
              material={materials["Tiny Iris 1.3 (Style Amber)"]}
              skeleton={nodes.Mesh021.skeleton}
            />
            <skinnedMesh
              name="Mesh021_1"
              geometry={nodes.Mesh021_1.geometry}
              material={materials["Tiny Sclera 1.3 (Style Amber)"]}
              skeleton={nodes.Mesh021_1.skeleton}
            />
          </group>
          <skinnedMesh
            name="Eyebrow"
            geometry={nodes.Eyebrow.geometry}
            material={materials.Hair}
            skeleton={nodes.Eyebrow.skeleton}
          />
          <skinnedMesh
            name="Face"
            geometry={nodes.Face.geometry}
            material={materials.Skin}
            skeleton={nodes.Face.skeleton}
          />
          <group name="Glasses">
            <skinnedMesh
              name="Plane003"
              geometry={nodes.Plane003.geometry}
              material={materials.Glasses}
              skeleton={nodes.Plane003.skeleton}
            />
            <skinnedMesh
              name="Plane003_1"
              geometry={nodes.Plane003_1.geometry}
              material={materials["Nose pad"]}
              skeleton={nodes.Plane003_1.skeleton}
            />
            <skinnedMesh
              name="Plane003_2"
              geometry={nodes.Plane003_2.geometry}
              material={materials.Screw}
              skeleton={nodes.Plane003_2.skeleton}
            />
            <skinnedMesh
              name="Plane003_3"
              geometry={nodes.Plane003_3.geometry}
              material={materials.Plastic}
              skeleton={nodes.Plane003_3.skeleton}
            />
            <skinnedMesh
              name="Plane003_4"
              geometry={nodes.Plane003_4.geometry}
              material={materials.Material}
              skeleton={nodes.Plane003_4.skeleton}
            />
          </group>
          <skinnedMesh
            name="Hand"
            geometry={nodes.Hand.geometry}
            material={materials.Skin}
            skeleton={nodes.Hand.skeleton}
          />
          <skinnedMesh
            name="Hoodie"
            geometry={nodes.Hoodie.geometry}
            material={materials.Hoodie}
            skeleton={nodes.Hoodie.skeleton}
          />
          <skinnedMesh
            name="Long_Pants"
            geometry={nodes.Long_Pants.geometry}
            material={materials.Pants}
            skeleton={nodes.Long_Pants.skeleton}
          />
          <skinnedMesh
            name="Vans"
            geometry={nodes.Vans.geometry}
            material={materials.VansShoeMaterial}
            skeleton={nodes.Vans.skeleton}
          />
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload("models/avatar.glb")
